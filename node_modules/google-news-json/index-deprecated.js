const _httpGetAsync = function (url, callback) {
	let xmlHttp = new XMLHttpRequest();
	// noinspection SpellCheckingInspection
	xmlHttp.onreadystatechange = function() {
		if(xmlHttp.readyState === 4 && xmlHttp.status === 200){
			callback(null, xmlHttp.responseText);
		} else if(xmlHttp.readyState === 4){
			callback(xmlHttp.statusText, xmlHttp.responseText);
		}
	};
	xmlHttp.open("GET", url, true); // true for asynchronous
	xmlHttp.send(null);
};

const googleNews = function(options){

	const _generateGoogleFeedURL = function(method, query){
		let feedUrl = "https://news.google.com/rss";
		method = method ? method.toLowerCase() : method;
		if(method && method === "topic") query = query.toUpperCase();

		switch(method){
			case "geo":
			case "topic":
				feedUrl += "/headlines/section/"+method.toLowerCase()+"/"+query;
				break;
			case "search":
				feedUrl += "/search?q="+query;
				break;
		}

		return feedUrl;
	};

	const _getNews = function(method, query, callback){
		const feedUrl = _generateGoogleFeedURL(method, query);
		_httpGetAsync(feedUrl, callback);
	};

	this.getTopNews = async function(){
		return new Promise((resolve, reject) => {
			_getNews(null, location, (err, news) => {
				if(err) return reject(news);
				return resolve(news);
			});
		});
	};

	this.getGeoNews = async function(location){
		return new Promise((resolve, reject) => {
			_getNews("geo", location, (err, news) => {
				if(err) return reject(news);
				return resolve(news);
			});
		});
	};

	/**
	 * Supported Topics: WORLD NATION BUSINESS TECHNOLOGY ENTERTAINMENT SPORTS SCIENCE HEALTH
 	 */
	this.getNewsByTopic = async function(topic){
		return new Promise((resolve, reject) => {
			_getNews("topic", topic, (err, news) => {
				if(err) return reject(news);
				return resolve(news);
			});
		});
	};

	this.search = async function(query){
		return new Promise((resolve, reject) => {
			_getNews("search", query, (err, news) => {
				if(err) return reject(news);
				return resolve(news);
			});
		});
	};

	this.getTopNewsSync = async function(callback){
		_getNews(null, location, callback);
	};

	this.getGeoNewsSync = async function(location, callback){
		_getNews("geo", location, callback);
	};

	this.getNewsByTopicSync = async function(topic, callback){
		_getNews("topic", topic, callback);
	};

	this.searchSync = function(query, callback){
		_getNews("search", query, callback);
	};
};

module.exports = googleNews;